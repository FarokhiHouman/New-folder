<UserControl x:Class="Slb.Production.Engineering.Views.Well.WellHeadView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ui="https://slb.production.engineering.ui"
             xmlns:common="https://slb.production.engineering.common"
             xmlns:localWellViews="clr-namespace:Slb.Production.Engineering.Views.Well"
             xmlns:localViews="clr-namespace:Slb.Production.Engineering.Views"
             xmlns:LogicalNetwork="clr-namespace:Slb.Production.Engineering.LogicalNetwork;assembly=Slb.Production.Engineering.LogicalNetwork"
             xmlns:fluidViews="clr-namespace:Slb.Production.Engineering.Views.Fluid"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:str_properties="clr-namespace:Slb.Production.Engineering.Model.StandardDomain.Properties;assembly=Slb.Production.Engineering.Model.StandardDomain"
             xmlns:heatTransfer="clr-namespace:Slb.Production.Engineering.Views.Well.HeatTransfer"
             xmlns:tubulars="clr-namespace:Slb.Production.Engineering.Views.Well.Tubulars"
             VirtualizingPanel.IsVirtualizing="true">
  <Grid>
    <i:Interaction.Behaviors>
      <ui:GridRestrictColumnDefinitionWidthBehavior/>
    </i:Interaction.Behaviors>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="385" MinWidth="{StaticResource GRIDCOLUMNDEFMINWIDTH}"/>
      <ColumnDefinition Width="Auto"/>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <FrameworkElement Name="DataContextElement"/>
    <ContentControl Grid.Column="0" Grid.Row="1" DataContext="{Binding WellboreSchematicViewModel}">
      <localWellViews:WellboreSchematicView/>
    </ContentControl>
    <GridSplitter Grid.Column="1" Grid.Row="1" ResizeDirection="Columns" Width="3" VerticalAlignment="Stretch"
                  HorizontalAlignment="Stretch" Margin="0"/>
    <ui:CustomTabControl x:Name="CustomTabControl" Grid.Column="2" Grid.Row="1" SelectedIndex="{Binding SelectedIndex}">
      <TabItem Header="{x:Static str_properties:CoreStrings.Header_General}">
        <ContentControl>
          <localWellViews:WellHeadSummaryView IsEnabled="{Binding Path=IsBuiltinTemplate, Converter={StaticResource InvBool}}"/>
        </ContentControl>
      </TabItem>
      <TabItem Header="{x:Static str_properties:CoreStrings.Header_DeviationSurvey}">
        <AdornerDecorator>
          <ui:AdornerControl IsAdorning="{Binding DeviationViewInitialized, Converter={StaticResource InvBool}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type localWellViews:WellHeadView}}}">
            <ui:AdornerControl.AdorningContent>
              <ui:BusyView/>
            </ui:AdornerControl.AdorningContent>
            <ContentControl VerticalContentAlignment="Stretch"
                            Visibility="{Binding DeviationViewInitialized, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type localWellViews:WellHeadView}}, Converter={StaticResource BoolToVis}}"
                            IsEnabled="{Binding Path=IsBuiltinTemplate, Converter={StaticResource InvBool}}">
              <localWellViews:BoreholeDeviationSurveysView x:Name="BoreholeDeviationSurveysView"/>
            </ContentControl>
          </ui:AdornerControl>
        </AdornerDecorator>
      </TabItem>
      <TabItem Header="{x:Static str_properties:CoreStrings.Header_HeatTransfer}">
        <AdornerDecorator>
          <ui:AdornerControl IsAdorning="{Binding HeatTransferViewInitialized, Converter={StaticResource InvBool}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type localWellViews:WellHeadView}}}">
            <ui:AdornerControl.AdorningContent>
              <ui:BusyView/>
            </ui:AdornerControl.AdorningContent>
            <ContentControl Visibility="{Binding HeatTransferViewInitialized, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type localWellViews:WellHeadView}}, Converter={StaticResource BoolToVis}}"
                            IsEnabled="{Binding Path=IsBuiltinTemplate, Converter={StaticResource InvBool}}">
              <heatTransfer:BoreholeHeatTransferView x:Name="BoreholeHeatTransferView"/>
            </ContentControl>
          </ui:AdornerControl>
        </AdornerDecorator>
      </TabItem>
      <TabItem Header="{x:Static str_properties:CoreStrings.Tubulars}">
        <AdornerDecorator>
          <ui:AdornerControl IsAdorning="{Binding TubingViewInitialized, Converter={StaticResource InvBool}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type localWellViews:WellHeadView}}}">
            <ui:AdornerControl.AdorningContent>
              <ui:BusyView/>
            </ui:AdornerControl.AdorningContent>
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
              <ContentControl Visibility="{Binding TubingViewInitialized, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type localWellViews:WellHeadView}}, Converter={StaticResource BoolToVis}}"
                              IsEnabled="{Binding Path=IsBuiltinTemplate, Converter={StaticResource InvBool}}">
                <tubulars:BoreholeTubularView x:Name="BoreholeTubingView"/>
              </ContentControl>
            </ScrollViewer>
          </ui:AdornerControl>
        </AdornerDecorator>
      </TabItem>
      <TabItem Header="{x:Static str_properties:CoreStrings.DownholeEquipment}">
        <AdornerDecorator>
          <ui:AdornerControl IsAdorning="{Binding DownholeEquipmentViewInitialized, Converter={StaticResource InvBool}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type localWellViews:WellHeadView}}}">
            <ui:AdornerControl.AdorningContent>
              <ui:BusyView/>
            </ui:AdornerControl.AdorningContent>
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
              <ContentControl Visibility="{Binding DownholeEquipmentViewInitialized, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type localWellViews:WellHeadView}}, Converter={StaticResource BoolToVis}}"
                              IsEnabled="{Binding Path=IsBuiltinTemplate, Converter={StaticResource InvBool}}">
                <localWellViews:BoreholeDownholeEquipmentView x:Name="BoreholeDownholeEquipmentView"/>
              </ContentControl>
            </ScrollViewer>
          </ui:AdornerControl>
        </AdornerDecorator>
      </TabItem>
      <TabItem Header="{x:Static str_properties:CoreStrings.ArtificialLift}">
        <AdornerDecorator>
          <ui:AdornerControl IsAdorning="{Binding ArtificialLiftInitialized, Converter={StaticResource InvBool}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type localWellViews:WellHeadView}}}">
            <ui:AdornerControl.AdorningContent>
              <ui:BusyView/>
            </ui:AdornerControl.AdorningContent>
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
              <ContentControl Visibility="{Binding ArtificialLiftInitialized, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type localWellViews:WellHeadView}}, Converter={StaticResource BoolToVis}}"
                              IsEnabled="{Binding Path=IsBuiltinTemplate, Converter={StaticResource InvBool}}">
                <localWellViews:BoreholeArtificialLiftView x:Name="BoreholeArtificialLiftView"/>
              </ContentControl>
            </ScrollViewer>
          </ui:AdornerControl>
        </AdornerDecorator>
      </TabItem>
      <TabItem Header="{x:Static str_properties:CoreStrings.Completions}">
        <AdornerDecorator>
          <ui:AdornerControl IsAdorning="{Binding CompletionViewInitialized, Converter={StaticResource InvBool}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type localWellViews:WellHeadView}}}">
            <ui:AdornerControl.AdorningContent>
              <ui:BusyView/>
            </ui:AdornerControl.AdorningContent>
            <ContentControl Visibility="{Binding CompletionViewInitialized, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type localWellViews:WellHeadView}}, Converter={StaticResource BoolToVis}}"
                            IsEnabled="{Binding Path=IsBuiltinTemplate, Converter={StaticResource InvBool}}">
              <localWellViews:BoreholeCompletionsView x:Name="BoreholeCompletionsView"
                                                      IsInTemplateWell="{Binding Path=(FrameworkElement.DataContext).IsWellTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType=localWellViews:WellHeadView}, UpdateSourceTrigger=PropertyChanged}"/>
            </ContentControl>
          </ui:AdornerControl>
        </AdornerDecorator>
      </TabItem>
      <TabItem Header="{x:Static str_properties:CoreStrings.SurfaceEquipment}"
               Visibility="{Binding Path=IsWellTemplate, Converter={StaticResource InvBoolToVis}}">
        <ContentControl>
          <FrameworkElement.Style>
            <Style TargetType="{x:Type ContentControl}">
              <Style.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=DataContext, Source={x:Reference DataContextElement}, Converter={StaticResource NullToBool}}"
                               Value="False"/>
                    <Condition Binding="{Binding Path=(FrameworkElement.DataContext).WellMode, RelativeSource={RelativeSource FindAncestor, AncestorType=localWellViews:WellHeadView}, Converter={StaticResource EnumToBool}, ConverterParameter=Advanced}"
                               Value="True"/>
                  </MultiDataTrigger.Conditions>
                  <Setter Property="ContentControl.Content">
                    <Setter.Value>
                      <localWellViews:AdvancedSurfaceEquipment/>
                    </Setter.Value>
                  </Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=DataContext, Source={x:Reference DataContextElement}, Converter={StaticResource NullToBool}}"
                               Value="False"/>
                    <Condition Binding="{Binding Path=(FrameworkElement.DataContext).WellMode, RelativeSource={RelativeSource FindAncestor, AncestorType=localWellViews:WellHeadView}, Converter={StaticResource EnumToBool}, ConverterParameter=Advanced}"
                               Value="False"/>
                  </MultiDataTrigger.Conditions>
                  <Setter Property="ContentControl.Content">
                    <Setter.Value>
                      <localWellViews:ConventionalSurfaceEquipment/>
                    </Setter.Value>
                  </Setter>
                </MultiDataTrigger>
              </Style.Triggers>
            </Style>
          </FrameworkElement.Style>
        </ContentControl>
      </TabItem>
    </ui:CustomTabControl>
    <ContentControl Grid.Row="0" Grid.ColumnSpan="3"
                    IsEnabled="{Binding Path=IsBuiltinTemplate, Converter={StaticResource InvBool}}">
      <Control.Template>
        <ControlTemplate>
          <ui:RibbonView x:Name="ribbon" Visibility="Collapsed"/>
          <ControlTemplate.Triggers>
            <DataTrigger Value="True"
                         Binding="{Binding Path=ShowRibbon, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type localWellViews:WellHeadView}}, UpdateSourceTrigger=PropertyChanged}">
              <Setter TargetName="ribbon" Property="UIElement.Visibility" Value="Visible"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Control.Template>
    </ContentControl>
  </Grid>
</UserControl>